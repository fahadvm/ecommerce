<%- include('../partials/user/header') %>


    <style>
        :root {
            --dark-bg: #ff0000;
            --accent-gold: #000000;
            --secondary-bg: #ffffff94;
            --text-primary: #ff008c;
            --text-secondary: #00ff1a;
        }

        .product-page {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
            margin-top: 50px;
            box-shadow: 0 0 20px #e4e4e4;
            padding-bottom: 50px;
            border-radius: 5px;
            background: #fff6eb94;
        }

        .product-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            /* 50% - 50% */
            gap: 2rem;
            align-items: center;
        }

        .product-gallery {
            text-align: center;
        }

        .main-image img {
            width: 100%;
            border-radius: 8px;
            border: 2px solid var(--accent-gold);
        }

        .thumbnails {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
            justify-content: center;
        }

        .thumbnail img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
            cursor: pointer;
            border: 1px solid transparent;
        }

        .thumbnail.active img {
            border-color: var(--accent-gold);
        }

        .product-info {
            padding: 2rem;
            background-color: var(--secondary-bg);
            box-shadow: 0 0 20px #e4e4e4;
            padding-bottom: 50px;
            border-radius: 5px;
        }

        .product-title {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: var(--accent-gold);
        }

        .product-price {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .product-description {
            color: var(--text-secondary);
            line-height: 1.6;
            margin-bottom: 2rem;
        }

        .size-selector {
            margin: 2rem 0;
        }

        .size-btn {
            background: none;
            border: 1px solid var(--accent-gold);
            color: var(--text-primary);
            padding: 0.5rem 1rem;
            margin: 0 0.5rem 0.5rem 0;
            cursor: pointer;
            border-radius: 4px;
        }

        .size-btn.selected {
            background-color: var(--accent-gold);
            color: var(--dark-bg);
        }

        .add-to-cart,
        .wishlist {
            padding: 10px 15px;
            font-size: 1rem;
            border-radius: 5px;
            cursor: pointer;
            border: none;
        }

        .add-to-cart {
            background: #F28123;
            color: #ffffff;
            font-family: Poppins, sans-serif;
            border-radius: 50px;
        }

        .wishlist {
            background: none;
            border: 1px solid #F28123;
            color: #F28123;
        }

        .recommended-section {
            margin-top: 4rem;
            padding: 2rem 0;
            border-top: 1px solid #333;
        }

        .rating {
            margin: 10px 0;
            color: #ffcc00;
            font-size: 1.2rem;
        }

        .original-price {
            color: #888;
            font-size: 1rem;
        }

        .discounted-price {
            color: #28a745;
            font-size: 1.3rem;
            font-weight: bold;
        }

        .offer {
            color: red;
            font-size: 1rem;
        }

        .stock-status {
            font-size: 1.1rem;
            font-weight: bold;
        }

        .in-stock {
            color: green;
        }

        .out-of-stock {
            color: red;
        }

        .buttons {
            margin: 20px 0;
            display: flex;
            gap: 10px;
        }

        .reviews {
            margin-top: 20px;
            border-top: 1px solid #ccc;
            padding-top: 10px;
        }

        .review {
            margin-bottom: 10px;
        }

        .recommended-title {
            font-size: 1.5rem;
            margin-bottom: 2rem;
        }

        .recommended-products {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
        }

        .product-card {
            background-color: var(--secondary-bg);
            border-radius: 8px;
            padding: 1rem;
            text-align: center;
        }

        .product-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 4px;
        }

        .product-card h3 {
            margin: 1rem 0;
            color: var(--text-primary);
        }

        .product-card .price {
            color: var(--accent-gold);
            font-size: 1.2rem;
        }

        .main-image {
            position: relative;
            overflow: hidden;
            width: 100%;
            border-radius: 8px;
            border: 2px solid var(--accent-gold);
        }

        .main-image img {
            width: 100%;
            transition: transform 0.3s ease-in-out;
        }

        .main-image:hover img {
            transform: scale(1.5);
            /* Zoom effect */
        }
    </style>
    <div class="toppybar" style="height: 90px;background:#051922;">

    </div>
    <div class="product-page">
        <div class="product-container">
            <!-- Product Gallery (Left Side - 50%) -->
            <div class="product-gallery">
                <div class="main-image">
                    <img id="main-img" src="<%= product.productImages[0] %>" alt="<%= product.productName %>">
                </div>
                <div class="thumbnails">
                    <% product.productImages.forEach((productImages, index)=> { %>
                        <div class="thumbnail <%= index === 0 ? 'active' : '' %>">
                            <img src="<%= productImages %>" alt="Thumbnail <%= productImages + 1 %>"
                                onclick="changeImage('<%= productImages %>')">
                        </div>
                        <% }); %>
                </div>
            </div>

            <!-- Product Info (Right Side - 50%) -->
            <div class="product-info">
                <h1 class="product-title" style="color: rgb(255, 174, 0);">
                    <%= product.productName %>
                </h1>
                <p class="product-title">
                    <%= product.shortDescription %>
                </p>
                <p class="product-information" style="color: #f4d260;">
                    <span style="color: #ff9090;">nutritions:</span>
                    <%= product.nutritionalInfo %>
                </p>

                <!-- ‚≠ê Ratings (Static) -->
                <div class="rating">
                    <span class="stars">
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star-half-o"></i> <!-- Example: 4.5 Stars -->
                    </span>
                    <span class="rating-value">(4.5/5, 120 reviews)</span>
                </div>

                <!-- üí∞ Price & Discounts (Dynamic) -->
                <p class="original-price">Original Price: <del>‚Çπ<%= product.regularPrice %></del></p>
                <p class="discounted-price">Discounted Price: <span class="highlight">‚Çπ<%= product.salePrice %></span>
                </p>
                <p class="offer">Offer Applied: <%= totalOffer %>% OFF</p>

                <!-- üì¶ Stock Availability (Dynamic) -->
                <p class="stock-status">
                    <% if (product.stock> 0) { %>
                        <span class="in-stock">In Stock</span> (Only <%= product.stock %> left!)
                            <% } else { %>
                                <span class="out-of-stock">Out of Stock</span>
                                <% } %>
                </p>

                <!-- üõí Add to Cart & Wishlist Buttons -->
                <div class="buttons">
                    <% if (product.stock> 0) { %>
                        <button class="add-to-cart" onclick="addToCart('<%= product._id %>')">
                            <i class="fas fa-shopping-cart"></i> Add to Cart
                        </button>

                        <% } %>
                            <button class="wishlist" onclick="addToWishlist('<%= product._id %>')">‚ù§ Add to
                                Wishlist</button>
                </div>

                <!-- üìù Reviews Section (Static) -->
                <div class="reviews">
                    <h3>Customer Reviews</h3>
                    <div class="review">
                        <strong>John Doe</strong>
                        <p>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê - Amazing product! Loved the quality.</p>
                    </div>
                    <div class="review">
                        <strong>Jane Smith</strong>
                        <p>‚≠ê‚≠ê‚≠ê‚≠ê - Great product, but delivery took some time.</p>
                    </div>
                    <div class="review">
                        <strong>Michael Brown</strong>
                        <p>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê - Worth every penny! Will buy again.</p>
                    </div>
                </div>
            </div>


        </div>
    </div>
    <section class="related-product-area section_gap_bottom mt-5">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-6 text-center">
                    <div class="section-title">
                        <h1>Related Products</h1>
                        <p>Explore our range of related products that complement your purchase. Each item is carefully
                            selected to ensure the highest quality and satisfaction.</p>
                    </div>
                </div>
            </div>
            <div class="row">
                <% for(let i=0; i < 8 && i < products.length; i++) { %>
                    <div class="col-lg-3 col-md-4 text-center">
                        <div class="single-product-item">
                            <div class="product-image">
                                <a href="/productDetails?id=<%= products[i]._id.toString() %>">
                                    <img src="<%= products[i].productImages[0] %>" alt="<%= products[i].productName %>">
                                </a>
                            </div>
                            <h3>
                                <%= products[i].productName %>
                            </h3>
                            <p class="product-price">
                                <span>Per Kg</span>‚Çπ <%= products[i].salePrice %>
                            </p>
                            <a href="/productDetails?id=<%= products[i]._id.toString() %>" class="cart-btn">
                                <i class="fas fa-shopping-cart"></i> View Details
                            </a>
                        </div>
                    </div>
                    <% } %>
            </div>

    </section>

    <script>

        // Function to change the main image when clicking a thumbnail
        function changeImage(newSrc) {
            const mainImg = document.getElementById('main-img');
            mainImg.src = newSrc;

            // Remove active class from all thumbnails and add it to the selected one
            document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
            event.target.parentElement.classList.add('active');
        }

        // Zoom effect
        document.getElementById('main-img').addEventListener('mousemove', function (event) {
            const img = event.target;
            const { left, top, width, height } = img.getBoundingClientRect();
            const x = (event.clientX - left) / width * 100;
            const y = (event.clientY - top) / height * 100;
            img.style.transformOrigin = `${x}% ${y}%`;
        });

        // Thumbnail interaction
        document.querySelectorAll('.thumbnail img').forEach(thumb => {
            thumb.addEventListener('click', () => {
                const mainImg = document.querySelector('.main-image img');
                mainImg.src = thumb.src;
                document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
                thumb.parentElement.classList.add('active');
            });
        });

        // Size selection
        document.querySelectorAll('.size-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                document.querySelectorAll('.size-btn').forEach(b => b.classList.remove('selected'));
                btn.classList.add('selected');
            });
        });

        function addToWishlist(productId) {
    if (!productId) {
        Swal.fire({
            title: 'Invalid Product',
            text: 'Invalid product ID. Please try again.',
            icon: 'error',
            background: '#1a1a1a',
            color: '#ffffff',
            customClass: {
                popup: 'border-orange'
            },
            buttonsStyling: false,
            confirmButtonText: 'OK',
            confirmButtonColor: '#ff8c42'
        });
        return;
    }


    $.ajax({
        url: '/addToWishlist',
        method: 'patch',
        contentType: 'application/json', 
        data: JSON.stringify({ productId }),
        success: (response) => {
            if (response.status) {
                Swal.fire({
                    title: 'Added to Wishlist',
                    text: 'The product has been added to your wishlist!',
                    icon: 'success',
                    timer: 2000,
                    showConfirmButton: false,
                    background: '#1a1a1a',
                    color: '#ffffff',
                    customClass: {
                        popup: 'border-orange'
                    },
                    buttonsStyling: false,
                    timerProgressBar: true
                });
            } else if (response.status === 401) { 
                Swal.fire({
                    title: 'Login Required',
                    text: 'Please log in to add items to your wishlist.',
                    icon: 'warning',
                    confirmButtonText: 'Log In',
                    background: '#1a1a1a',
                    color: '#ffffff',
                    confirmButtonColor: '#ff8c42'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/login';
                    }
                });
            } else {
                Swal.fire({
                    title: 'Failed to Add',
                    text: response.message || 'Please log in to add items to your wishlist.',
                    icon: 'warning',
                    background: '#1a1a1a',
                    color: '#ffffff',
                    customClass: {
                        popup: 'border-orange'
                    },
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#ff8c42'
                });
            }
        },
        error: (xhr, status, error) => {
            console.error("AJAX Error:", xhr, status, error);
            const errorMessage = xhr.responseJSON?.message || "There was an error adding the product to your wishlist.";

            Swal.fire({
                title: 'Error',
                text: errorMessage,
                icon: 'error',
                background: '#1a1a1a',
                color: '#ffffff',
                customClass: {
                    popup: 'border-orange'
                },
                confirmButtonText: 'OK',
                confirmButtonColor: '#ff8c42'
            });
        }
    });
}



        //add to cart
        function addToCart(productId) {
            fetch('/add-cart', {
                method: 'post',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId })
            })
                .then(response => {
                    // Check if the response is not OK (e.g., 401)
                    if (!response.ok) {
                        return response.json().then(data => {
                            // Throw an error with the message from the backend
                            throw new Error(data.message || 'Something went wrong');
                        });
                    }
                    return response.json(); // Proceed if status is 200-299
                })
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Product added to cart!',
                            icon: 'success',
                            showCancelButton: true,
                            confirmButtonText: 'Go to Cart',
                            cancelButtonText: 'Continue Shopping'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/cart';
                            }
                        });
                    } else if (data.error === "max_limit") {
                        Swal.fire({
                            title: 'Max limit reached!',
                            text: 'You can only add up to 5 of this item.',
                            icon: 'warning'
                        });
                    } else if (data.error === "out_of_stock") {
                        Swal.fire({
                            title: 'Out of stock!',
                            text: 'Not enough stock available.',
                            icon: 'error'
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: 'Failed to add product to cart.',
                            icon: 'error'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error.message);
                    // Handle specific backend messages like "User not logged in"
                    if (error.message === "User not logged in") {
                        Swal.fire({
                            title: 'Login Required',
                            text: 'Please log in to add items to your cart.',
                            icon: 'warning',
                            confirmButtonText: 'Log In',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/login'; // Redirect to login page
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: error.message || 'Something went wrong. Please try again.',
                            icon: 'error'
                        });
                    }
                });
        }
    </script>

    <%- include('../partials/user/footer') %>